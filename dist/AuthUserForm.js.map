{"version":3,"sources":["../dist-esnext/AuthUserForm.js"],"names":["V","validateUserNameOrEmail","curry","opts","propName","obj","propValue","prop","indexOf","validateEmail","authUserForm","validate","userNameOrEmail","required","password"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AACA;;;;;;AACA;;;AAGO,IAAMC,4DAA0B,gBAAEC,KAAF,CAAQ,UAACC,IAAD,EAAOC,QAAP,EAAiBC,GAAjB,EAAyB;AACpE,QAAMC,YAAY,gBAAEC,IAAF,CAAOH,QAAP,EAAiBC,GAAjB,CAAlB;AACA,WAAOC,UAAUE,OAAV,CAAkB,GAAlB,KAA0B,CAA1B,GACDR,EAAES,aAAF,CAAgBN,IAAhB,EAAsBC,QAAtB,EAAgCC,GAAhC,CADC,GAED,oCAAmBD,QAAnB,EAA6BC,GAA7B,CAFN;AAGH,CALsC,CAAhC;AAMP;;;AAGO,IAAMK,sCAAeV,EAAEW,QAAF,CAAW;AACnCC,qBAAiBX,wBAAwB;AACrCY,kBAAU;AAD2B,KAAxB,CADkB;AAInCC,cAAU,uCAAsB,IAAtB;AAJyB,CAAX,CAArB;AAMP","file":"AuthUserForm.js","sourcesContent":["import * as V from 'ptz-validations';\nimport R from 'ramda';\nimport { getPasswordValidation, userNameValidation } from './createUser';\n/**\n * Validate UserName or E-mail to login.\n */\nexport const validateUserNameOrEmail = R.curry((opts, propName, obj) => {\n    const propValue = R.prop(propName, obj);\n    return propValue.indexOf('@') >= 0\n        ? V.validateEmail(opts, propName, obj)\n        : userNameValidation(propName, obj);\n});\n/**\n * Authenticate User Form.\n */\nexport const authUserForm = V.validate({\n    userNameOrEmail: validateUserNameOrEmail({\n        required: true,\n    }),\n    password: getPasswordValidation(true)\n});\n//# sourceMappingURL=AuthUserForm.js.map"]}
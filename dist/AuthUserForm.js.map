{"version":3,"sources":["../dist-esnext/AuthUserForm.js"],"names":["V","validateUserNameOrEmail","curry","propName","obj","propValue","prop","createUserValidation","userNameOrEmail","indexOf","isEmail","validate","authUserForm","password"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AACA;;;;;;AACA;;;AAGO,MAAMC,4DAA0B,gBAAEC,KAAF,CAAQ,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAC9D,UAAMC,YAAY,gBAAEC,IAAF,CAAOH,QAAP,EAAiBC,GAAjB,CAAlB;AACA,UAAMG,uBAAuB,EAAEC,+CAAF,EAA7B;AACA,WAAOH,UAAUI,OAAV,CAAkB,GAAlB,KAA0B,CAA1B,GACDT,EAAEU,OAAF,CAAUP,QAAV,EAAoBC,GAApB,CADC,GAEDJ,EAAEW,QAAF,CAAWJ,oBAAX,EAAiCH,GAAjC,CAFN;AAGH,CANsC,CAAhC;AAOP;;;AAGO,MAAMQ,sCAAeZ,EAAEW,QAAF,CAAW;AACnCH,qBAAiB,CAACP,uBAAD,CADkB;AAEnCY,cAAU,uCAAsB,IAAtB;AAFyB,CAAX,CAArB;AAIP","file":"AuthUserForm.js","sourcesContent":["import * as V from 'ptz-validations';\r\nimport R from 'ramda';\r\nimport { getPasswordValidation, userNameValidation } from './createUser';\r\n/**\r\n * Validate UserName or E-mail to login.\r\n */\r\nexport const validateUserNameOrEmail = R.curry((propName, obj) => {\r\n    const propValue = R.prop(propName, obj);\r\n    const createUserValidation = { userNameOrEmail: userNameValidation };\r\n    return propValue.indexOf('@') >= 0\r\n        ? V.isEmail(propName, obj)\r\n        : V.validate(createUserValidation)(obj);\r\n});\r\n/**\r\n * Authenticate User Form.\r\n */\r\nexport const authUserForm = V.validate({\r\n    userNameOrEmail: [validateUserNameOrEmail],\r\n    password: getPasswordValidation(true)\r\n});\r\n//# sourceMappingURL=AuthUserForm.js.map"]}
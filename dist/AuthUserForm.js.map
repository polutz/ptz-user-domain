{"version":3,"sources":["../dist-esnext/AuthUserForm.js"],"names":["V","validateUserNameOrEmail","curry","propName","obj","propValue","prop","createUserValidation","userNameOrEmail","indexOf","isEmail","validate","authUserForm","password"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AACA;;;;;;AACA;;;AAGO,IAAMC,4DAA0B,gBAAEC,KAAF,CAAQ,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAC9D,QAAMC,YAAY,gBAAEC,IAAF,CAAOH,QAAP,EAAiBC,GAAjB,CAAlB;AACA,QAAMG,uBAAuB,EAAEC,+CAAF,EAA7B;AACA,WAAOH,UAAUI,OAAV,CAAkB,GAAlB,KAA0B,CAA1B,GACDT,EAAEU,OAAF,CAAUP,QAAV,EAAoBC,GAApB,CADC,GAEDJ,EAAEW,QAAF,CAAWJ,oBAAX,EAAiCH,GAAjC,CAFN;AAGH,CANsC,CAAhC;AAOP;;;AAGO,IAAMQ,sCAAeZ,EAAEW,QAAF,CAAW;AACnCH,qBAAiB,CAACP,uBAAD,CADkB;AAEnC;AACA;AACA;AACAY,cAAU,uCAAsB,IAAtB;AALyB,CAAX,CAArB;AAOP","file":"AuthUserForm.js","sourcesContent":["import * as V from '@alanmarcell/ptz-validations';\nimport R from 'ramda';\nimport { getPasswordValidation, userNameValidation } from './createUser';\n/**\n * Validate UserName or E-mail to login.\n */\nexport const validateUserNameOrEmail = R.curry((propName, obj) => {\n    const propValue = R.prop(propName, obj);\n    const createUserValidation = { userNameOrEmail: userNameValidation };\n    return propValue.indexOf('@') >= 0\n        ? V.isEmail(propName, obj)\n        : V.validate(createUserValidation)(obj);\n});\n/**\n * Authenticate User Form.\n */\nexport const authUserForm = V.validate({\n    userNameOrEmail: [validateUserNameOrEmail],\n    //     userNameOrEmail: validateUserNameOrEmail({\n    //     required: true,\n    // }),\n    password: getPasswordValidation(true)\n});\n//# sourceMappingURL=AuthUserForm.js.map"]}
{"version":3,"sources":["../dist-esnext/updateUser.test.js"],"names":["assert","User","describe","dbUser","newUser","updatedUser","beforeEach","createUser","id","userName","email","displayName","imgUrl","passwordHash","createdBy","dtCreated","Date","ip","user","it","notEqual","dtChanged","ok","equal"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;IAAYC,I;;AACZ;;;;AACAC,SAAS,YAAT,EAAuB,MAAM;AACzB,QAAIC,MAAJ,EAAYC,OAAZ,EAAqBC,WAArB;AACAC,eAAW,MAAM;AACbH,iBAASF,KAAKM,UAAL,CAAgB;AACrBC,gBAAI,OADiB;AAErBC,sBAAU,aAFW;AAGrBC,mBAAO,sBAHc;AAIrBC,yBAAa,UAJQ;AAKrBC,oBAAQ,UALa;AAMrBC,0BAAc,SANO;AAOrBC,uBAAW;AACPC,2BAAW,IAAIC,IAAJ,CAAS,YAAT,CADJ;AAEPC,oBAAI;AAFG;AAPU,SAAhB,CAAT;AAYAb,kBAAUH,KAAKM,UAAL,CAAgB;AACtBC,gBAAI,OADkB;AAEtBC,sBAAU,aAFY;AAGtBC,mBAAO,uBAHe;AAItBC,yBAAa,UAJS;AAKtBC,oBAAQ,UALc;AAMtBC,0BAAc,SANQ;AAOtBC,uBAAW;AACPC,2BAAW,IAAIC,IAAJ,CAAS,YAAT,CADJ;AAEPC,oBAAI,aAFG;AAGPC,sBAAM;AACFT,8BAAU,aADR;AAEFE,iCAAa,cAFX;AAGFD,2BAAO,sBAHL;AAIFF,wBAAI;AAJF;AAHC;AAPW,SAAhB,CAAV;AAkBAH,sBAAc,4BAAWF,MAAX,EAAmBC,OAAnB,CAAd;AACH,KAhCD;AAiCAe,OAAG,sBAAH,EAA2B,MAAM;AAC7BnB,eAAOoB,QAAP,CAAgBhB,QAAQI,EAAxB,EAA4BH,YAAYG,EAAxC;AACH,KAFD;AAGAW,OAAG,6BAAH,EAAkC,MAAM;AACpCnB,eAAOoB,QAAP,CAAgBhB,QAAQU,SAAxB,EAAmCT,YAAYS,SAA/C;AACH,KAFD;AAGAK,OAAG,yBAAH,EAA8B,MAAM;AAChCf,gBAAQiB,SAAR,GAAoB,IAAIL,IAAJ,CAAS,YAAT,CAApB;AACAhB,eAAOsB,EAAP,CAAUjB,YAAYgB,SAAtB;AACArB,eAAOsB,EAAP,CAAUjB,YAAYgB,SAAZ,GAAwBjB,QAAQiB,SAA1C;AACH,KAJD;AAKAF,OAAG,sBAAH,EAA2B,MAAM;AAC7Bf,gBAAQiB,SAAR,GAAoB,IAApB;AACArB,eAAOsB,EAAP,CAAUjB,YAAYgB,SAAtB;AACH,KAHD;AAIAF,OAAG,wBAAH,EAA6B,MAAM;AAC/BnB,eAAOuB,KAAP,CAAanB,QAAQK,QAArB,EAA+BJ,YAAYI,QAA3C;AACH,KAFD;AAGAU,OAAG,qBAAH,EAA0B,MAAM;AAC5BnB,eAAOuB,KAAP,CAAanB,QAAQM,KAArB,EAA4BL,YAAYK,KAAxC;AACH,KAFD;AAGAS,OAAG,8BAAH,EAAmC,MAAM;AACrCnB,eAAOuB,KAAP,CAAanB,QAAQM,KAArB,EAA4BL,YAAYK,KAAxC;AACH,KAFD;AAGAS,OAAG,2BAAH,EAAgC,MAAM;AAClCnB,eAAOuB,KAAP,CAAanB,QAAQO,WAArB,EAAkCN,YAAYM,WAA9C;AACH,KAFD;AAGAQ,OAAG,sBAAH,EAA2B,MAAM;AAC7BnB,eAAOuB,KAAP,CAAanB,QAAQQ,MAArB,EAA6BP,YAAYO,MAAzC;AACH,KAFD;AAGAO,OAAG,4BAAH,EAAiC,MAAM;AACnCnB,eAAOuB,KAAP,CAAanB,QAAQS,YAArB,EAAmCR,YAAYQ,YAA/C;AACH,KAFD;AAGH,CApED;AAqEA","file":"updateUser.test.js","sourcesContent":["import * as assert from 'ptz-assert';\r\nimport * as User from './index';\r\nimport { updateUser } from './updateUser';\r\ndescribe('updateUser', () => {\r\n    var dbUser, newUser, updatedUser;\r\n    beforeEach(() => {\r\n        dbUser = User.createUser({\r\n            id: 'OldId',\r\n            userName: 'OldUserName',\r\n            email: 'alanmarcell@live.com',\r\n            displayName: 'Old Name',\r\n            imgUrl: 'OldImage',\r\n            passwordHash: 'OldHash',\r\n            createdBy: {\r\n                dtCreated: new Date('1992-06-28'),\r\n                ip: '192.168.0.1'\r\n            }\r\n        });\r\n        newUser = User.createUser({\r\n            id: 'NewId',\r\n            userName: 'NewUserName',\r\n            email: 'angeloocana@gmail.com',\r\n            displayName: 'New Name',\r\n            imgUrl: 'NewImage',\r\n            passwordHash: 'NewHash',\r\n            createdBy: {\r\n                dtCreated: new Date('1992-01-07'),\r\n                ip: '192.168.0.1',\r\n                user: {\r\n                    userName: 'AlanMarcell',\r\n                    displayName: 'Alan Marcell',\r\n                    email: 'alanmarcell@live.com',\r\n                    id: 'New_Id'\r\n                }\r\n            }\r\n        });\r\n        updatedUser = updateUser(dbUser, newUser);\r\n    });\r\n    it('Should not update id', () => {\r\n        assert.notEqual(newUser.id, updatedUser.id);\r\n    });\r\n    it('Should not update createdBy', () => {\r\n        assert.notEqual(newUser.createdBy, updatedUser.createdBy);\r\n    });\r\n    it('Should update dtChanged', () => {\r\n        newUser.dtChanged = new Date('1992-06-28');\r\n        assert.ok(updatedUser.dtChanged);\r\n        assert.ok(updatedUser.dtChanged > newUser.dtChanged);\r\n    });\r\n    it('Should add dtChanged', () => {\r\n        newUser.dtChanged = null;\r\n        assert.ok(updatedUser.dtChanged);\r\n    });\r\n    it('Should update userName', () => {\r\n        assert.equal(newUser.userName, updatedUser.userName);\r\n    });\r\n    it('Should update email', () => {\r\n        assert.equal(newUser.email, updatedUser.email);\r\n    });\r\n    it('Should update emailConfirmed', () => {\r\n        assert.equal(newUser.email, updatedUser.email);\r\n    });\r\n    it('Should update displayName', () => {\r\n        assert.equal(newUser.displayName, updatedUser.displayName);\r\n    });\r\n    it('Should update imgUrl', () => {\r\n        assert.equal(newUser.imgUrl, updatedUser.imgUrl);\r\n    });\r\n    it('Should update passwordHash', () => {\r\n        assert.equal(newUser.passwordHash, updatedUser.passwordHash);\r\n    });\r\n});\r\n//# sourceMappingURL=updateUser.test.js.map"]}
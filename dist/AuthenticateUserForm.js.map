{"version":3,"sources":["../dist-es6/AuthenticateUserForm.js"],"names":["AuthenticateUserForm","args","setUserNameOrEmail","userNameOrEmail","setPassword","password","indexOf","addErrors","data","propName","propValidation","emailValidation","userNameValidation","toLowerCase","passwordValidation","required","minLength","maxLength"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;IACqBA,oB;;;AACjB,kCAAYC,IAAZ,EAAkB;AAAA;;AAAA,gJACRA,IADQ;;AAEd,cAAKC,kBAAL,CAAwBD,KAAKE,eAA7B;AACA,cAAKC,WAAL,CAAiBH,KAAKI,QAAtB;AAHc;AAIjB;;;;2CACkBF,e,EAAiB;AAChC,gBAAIA,mBAAmBA,gBAAgBG,OAAhB,CAAwB,GAAxB,KAAgC,CAAvD,EACI,KAAKC,SAAL,CAAe,mCAAc;AACzBC,sBAAML,eADmB;AAEzBM,0BAAU,iBAFe;AAGzBC,gCAAgB,eAAKC;AAHI,aAAd,CAAf,EADJ,KAOI,KAAKJ,SAAL,CAAe,oCAAe;AAC1BC,sBAAML,eADoB;AAE1BM,0BAAU,iBAFgB;AAG1BC,gCAAgB,eAAKE;AAHK,aAAf,CAAf;AAKJ,gBAAIT,mBAAmB,IAAvB,EACI,KAAKA,eAAL,GAAuBA,gBAAgBU,WAAhB,EAAvB;AACP;;;oCACWR,Q,EAAU;AAClB,iBAAKE,SAAL,CAAe,oCAAe;AAC1BC,sBAAMH,QADoB;AAE1BI,0BAAU,UAFgB;AAG1BC,gCAAgBV,qBAAqBc;AAHX,aAAf,CAAf;AAKA,iBAAKT,QAAL,GAAgBA,QAAhB;AACH;;;;;;kBA7BgBL,oB;;AA+BrBA,qBAAqBc,kBAArB,GAA0C;AACtCC,cAAU,IAD4B;AAEtCC,eAAW,eAAKF,kBAAL,CAAwBE,SAFG;AAGtCC,eAAW,eAAKH,kBAAL,CAAwBG;AAHG,CAA1C;QAKSjB,oB,GAAAA,oB;AACT","file":"AuthenticateUserForm.js","sourcesContent":["import { HaveValidation, validateEmail, validateString } from 'ptz-validations';\nimport User from './User';\nexport default class AuthenticateUserForm extends HaveValidation {\n    constructor(args) {\n        super(args);\n        this.setUserNameOrEmail(args.userNameOrEmail);\n        this.setPassword(args.password);\n    }\n    setUserNameOrEmail(userNameOrEmail) {\n        if (userNameOrEmail && userNameOrEmail.indexOf('@') >= 0)\n            this.addErrors(validateEmail({\n                data: userNameOrEmail,\n                propName: 'userNameOrEmail',\n                propValidation: User.emailValidation\n            }));\n        else\n            this.addErrors(validateString({\n                data: userNameOrEmail,\n                propName: 'userNameOrEmail',\n                propValidation: User.userNameValidation\n            }));\n        if (userNameOrEmail != null)\n            this.userNameOrEmail = userNameOrEmail.toLowerCase();\n    }\n    setPassword(password) {\n        this.addErrors(validateString({\n            data: password,\n            propName: 'password',\n            propValidation: AuthenticateUserForm.passwordValidation\n        }));\n        this.password = password;\n    }\n}\nAuthenticateUserForm.passwordValidation = {\n    required: true,\n    minLength: User.passwordValidation.minLength,\n    maxLength: User.passwordValidation.maxLength\n};\nexport { AuthenticateUserForm };\n//# sourceMappingURL=AuthenticateUserForm.js.map"]}
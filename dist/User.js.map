{"version":3,"sources":["../dist-es6/User.js"],"names":["User","user","ERROR_EMPTY_USER","setUserName","userName","setEmail","email","setDisplayName","displayName","setPassword","password","emailConfirmed","imgUrl","passwordHash","otherUsers","hasError","filter","length","addError","propName","errorMsg","ERROR_USER_USERNAME_IN_USE","ERROR_USER_EMAIL_IN_USE","newUser","dtChanged","Date","addErrors","data","propValidation","displayNameValidation","userNameValidation","toLowerCase","emailValidation","passwordValidation","required","minLength","maxLength"],"mappings":"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","file":"User.js","sourcesContent":["import { validateEmail, validateString } from 'ptz-validations';\nimport allErrors from './allErrors';\nimport EntityBase from './EntityBase';\nexport default class User extends EntityBase {\n    constructor(user) {\n        if (!user)\n            throw allErrors.ERROR_EMPTY_USER;\n        super(user);\n        // create set when prop need validation\n        this.setUserName(user.userName);\n        this.setEmail(user.email);\n        this.setDisplayName(user.displayName);\n        this.setPassword(user.password);\n        this.emailConfirmed = user.emailConfirmed;\n        this.imgUrl = user.imgUrl;\n        this.passwordHash = user.passwordHash;\n    }\n    otherUsersWithSameUserNameOrEmail(otherUsers) {\n        if (!otherUsers)\n            return false;\n        var hasError = false;\n        if (otherUsers.filter(user => user.userName === this.userName).length > 0) {\n            this.addError({\n                propName: 'userName',\n                errorMsg: allErrors.ERROR_USER_USERNAME_IN_USE\n            });\n            hasError = true;\n        }\n        if (otherUsers.filter(user => user.email === this.email).length > 0) {\n            this.addError({\n                propName: 'email',\n                errorMsg: allErrors.ERROR_USER_EMAIL_IN_USE\n            });\n            hasError = true;\n        }\n        return hasError;\n    }\n    update(newUser) {\n        this.setUserName(newUser.userName);\n        this.setEmail(newUser.email);\n        this.setDisplayName(newUser.displayName);\n        this.passwordHash = newUser.passwordHash;\n        this.imgUrl = newUser.imgUrl;\n        this.dtChanged = new Date();\n        return this;\n    }\n    setDisplayName(displayName) {\n        this.addErrors(validateString({\n            data: displayName,\n            propName: 'displayName',\n            propValidation: User.displayNameValidation\n        }));\n        this.displayName = displayName;\n    }\n    setUserName(userName) {\n        this.addErrors(validateString({\n            data: userName,\n            propName: 'userName',\n            propValidation: User.userNameValidation\n        }));\n        if (userName != null)\n            this.userName = userName.toLowerCase();\n    }\n    setEmail(email) {\n        this.addErrors(validateEmail({\n            data: email,\n            propName: 'email',\n            propValidation: User.emailValidation\n        }));\n        if (email != null)\n            this.email = email.toLowerCase();\n    }\n    setPassword(password) {\n        this.addErrors(validateString({\n            data: password,\n            propName: 'password',\n            propValidation: User.passwordValidation\n        }));\n        this.password = password;\n    }\n}\nUser.displayNameValidation = {\n    required: true,\n    minLength: 2,\n    maxLength: 50\n};\nUser.userNameValidation = {\n    required: true,\n    minLength: 3,\n    maxLength: 30\n};\nUser.passwordValidation = {\n    required: false,\n    minLength: 6,\n    maxLength: 30\n};\nUser.emailValidation = {\n    required: true\n};\nexport { User };\n//# sourceMappingURL=User.js.map"]}